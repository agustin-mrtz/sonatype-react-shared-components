/*
 * Copyright (c) 2019-present Sonatype, Inc.
 * This program and the accompanying materials are made available under
 * the terms of the Eclipse Public License 2.0 which accompanies this
 * distribution and is available at https://www.eclipse.org/legal/epl-2.0/.
 */
import * as enzymeUtils from '../../../__testutils__/enzymeUtils';

import NxVulnerabilityIndicator, { Props } from '../NxVulnerabilityIndicator';

describe('NxVulnerabilityIndicator', function() {
  const minimalProps = {
        criticalCount: 66,
        severeCount: 55,
        moderateCount: 44,
        lowCount: 33
      },
      getShallowComponent = enzymeUtils.getShallowComponent<Props>(NxVulnerabilityIndicator, minimalProps);

  it('renders the container with the expected default classes', function() {
    expect(getShallowComponent().find('.nx-vulnerability-indicator-container')).toExist();
    expect(getShallowComponent().find('.nx-vulnerability-indicator-container--row')).toExist();
  });

  it('renders all four indicators', function() {
    expect(getShallowComponent().find('.nx-vulnerability-indicator--critical')).toExist();
    expect(getShallowComponent().find('.nx-vulnerability-indicator--severe')).toExist();
    expect(getShallowComponent().find('.nx-vulnerability-indicator--moderate')).toExist();
    expect(getShallowComponent().find('.nx-vulnerability-indicator--low')).toExist();
  });

  it('renders all of the values set in minimalProps', function() {
    const checkCritical = getShallowComponent().find('.nx-vulnerability-indicator--critical'),
        checkSevere = getShallowComponent().find('.nx-vulnerability-indicator--severe'),
        checkModerate = getShallowComponent().find('.nx-vulnerability-indicator--moderate'),
        checkLow = getShallowComponent().find('.nx-vulnerability-indicator--low');
    expect(checkCritical.find('.nx-vulnerability-indicator__count')).toHaveText('66');
    expect(checkSevere.find('.nx-vulnerability-indicator__count')).toHaveText('55');
    expect(checkModerate.find('.nx-vulnerability-indicator__count')).toHaveText('44');
    expect(checkLow.find('.nx-vulnerability-indicator__count')).toHaveText('33');
  });

  it('renders the correct label for each indicator', function() {
    const checkCriticalText = getShallowComponent().find('.nx-vulnerability-indicator--critical'),
        checkSevereText = getShallowComponent().find('.nx-vulnerability-indicator--severe'),
        checkModerateText = getShallowComponent().find('.nx-vulnerability-indicator--moderate'),
        checkLowText = getShallowComponent().find('.nx-vulnerability-indicator--low');
    expect(checkCriticalText.find('.nx-vulnerability-indicator__text')).toHaveText('Critical');
    expect(checkSevereText.find('.nx-vulnerability-indicator__text')).toHaveText('Severe');
    expect(checkModerateText.find('.nx-vulnerability-indicator__text')).toHaveText('Moderate');
    expect(checkLowText.find('.nx-vulnerability-indicator__text')).toHaveText('Low');
  });

  it('correctly assigns supplied class', function() {
    const classComponent = getShallowComponent({ className: 'test-class' });
    expect(classComponent.find('.nx-vulnerability-indicator-container')).toHaveClassName('test-class');
  });

  it('correctly assigns supplied id', function() {
    const idComponent = getShallowComponent({ id: 'test-id' });
    expect(idComponent.find('.nx-vulnerability-indicator-container')).toHaveProp('id', 'test-id');
  });

  it('correctly applies the column modifier', function() {
    const idComponent = getShallowComponent({ layout: 'column' });
    expect(idComponent.find('.nx-vulnerability-indicator-container'))
        .toHaveClassName('nx-vulnerability-indicator-container--column');
  });

  it('correctly applies the grid modifier', function() {
    const idComponent = getShallowComponent({ layout: 'grid' });
    expect(idComponent.find('.nx-vulnerability-indicator-container'))
        .toHaveClassName('nx-vulnerability-indicator-container--grid');
  });
});
