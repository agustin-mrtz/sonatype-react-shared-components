/*
 * Copyright (c) 2019-present Sonatype, Inc.
 * This program and the accompanying materials are made available under
 * the terms of the Eclipse Public License 2.0 which accompanies this
 * distribution and is available at https://www.eclipse.org/legal/epl-2.0/.
 */
@use '../scss-shared/nx-container-helpers';
@use '../scss-shared/nx-text-helpers';

.nx-table {
  background-color: var(--nx-color-component-background);
  border-spacing: 0;
  border: var(--nx-border-default);
  border-radius: var(--nx-border-radius);
  display: table;
  margin: var(--nx-spacing-3x) 0 var(--nx-spacing-6x) 0;
  overflow: hidden;
  width: 100%;

  > tbody > .nx-table-row {
    > .nx-cell {
      $border-width: 1px;

      border-width: $border-width;
      border-color: transparent;
      border-style: none;

      border-bottom-style: solid;
      border-bottom-color: var(--nx-color-border-secondary);
      border-top-style: solid;

      // we want the perceived padding to be the standard spacing size. As the top border is generally invisible,
      // it should be counted as padding from that perspective
      padding-top: calc(var(--nx-spacing-3x) - #{$border-width});

      &:first-child {
        border-left-style: solid;
        padding-left: calc(var(--nx-spacing-4x) - #{$border-width});
      }

      &:last-child {
        border-right-style: solid;
        padding-right: calc(var(--nx-spacing-4x) - #{$border-width});
      }

      // Used for table cells container meta-information such as the fact that the table is empty, or
      // that the data is loading. These cells are expected to take up the entire row using colspan attributes
      &.nx-cell--meta-info {
        padding-top: calc(var(--nx-spacing-4x) - 1px);
        padding-bottom: var(--nx-spacing-4x);
        text-align: center;

        > * {
          margin-left: auto;
          margin-right: auto;
        }
      }
    }

    &:last-child {
      > .nx-cell {
        border-bottom-style: none;
      }

      > :first-child {
        border-bottom-left-radius: var(--nx-border-radius);
      }

      > :last-child {
        border-bottom-right-radius: var(--nx-border-radius);
      }
    }

    &.nx-clickable {
      &:hover {
        > .nx-cell {
          background-color: var(--nx-color-interactive-background-hover);
        }
      }

      &.selected {
        > .nx-cell {
          background-color: var(--nx-color-interactive-background-selected);
        }
      }

      &:active {
        > .nx-cell {
          background-color: var(--nx-color-interactive-background-active);
        }
      }

      &:focus-within {
        box-shadow: var(--nx-box-shadow-focus);
        outline: none;

        > .nx-cell {
          border-color: var(--nx-color-interactive-border-focus);
        }
      }
    }
  }
}

.nx-table-container {
  background-color: var(--nx-color-component-background);
  border: var(--nx-border-default);
  border-radius: var(--nx-border-radius);
  box-sizing: content-box;
  display: flex;
  flex-direction: column;
  overflow: hidden;

  // create a stacking context so the sticky content doesn't appear over other content outside the container
  position: relative;
  z-index: 0;

  // for specificity
  &.nx-scrollable {
    overflow-y: auto;
  }

  // NOTE: these styles used to be on .nx-table--scrollable
  > .nx-table {
    border-style: none;
    border-radius: 0;
    margin: 0;
    overflow: visible;

    // In Chrome (at least), tables are forced to have a whole number of pixels for their width. This means that
    // if a container has a fractional number of pixels width, the table width will be truncated down and a visible
    // gap will appear.  This calc ensures that when in a fractional-width container, the table will get an extra
    // pixel of width
    width: calc(100% + 0.9999px);

    > thead > :first-child {
      > .nx-cell {
        &:first-child, &:last-child {
          border-radius: 0;
        }
      }
    }

    > tbody > :last-child {
      > .nx-cell {
        &:first-child, &:last-child {
          border-radius: 0;
        }

        border-bottom-style: solid;
      }
    }

    .nx-cell--header {
      position: sticky;
      top: 0;
      z-index: 1;
    }

    &:last-child > tbody > :last-child > .nx-cell {
      border-bottom-style: none;
    }
  }
}

// deprecated
.nx-scrollable--table-container {
  @extend .nx-table-container;
}

.nx-table-container__footer {
  @include nx-container-helpers.container-vertical;

  background-color: var(--nx-color-component-background);
  border-top: var(--nx-border-default);
  margin-top: auto;

  // when following a table with no space between, merge the table's bottom border and the pagination's top border
  transform: translateY(-1px);

  // subtract 1 from bottom padding to counteract the translateY above
  padding: $nx-table-footer-vertical-padding var(--nx-spacing-6x)
    calc(#{$nx-table-footer-vertical-padding} - 1px) var(--nx-spacing-6x);
  position: sticky;
  bottom: 0;
  z-index: 1;
}

// nested and located this far down the file for specificity reasons
.nx-table {
  .nx-table-row--filter-header {
    > .nx-cell--header {
      top: $nx-table-cell-header-height;
    }

    .nx-filter-input {
      width: 250px;
    }
  }
}

.nx-table--fixed-layout {
  table-layout: fixed;
}

.nx-cell {
  @include nx-container-helpers.container-vertical;
  @include nx-container-helpers.container-horizontal;

  min-height: $nx-table-cell-min-height;
  padding: $nx-table-cell-vertical-padding var(--nx-spacing-3x);
  vertical-align: top;

  &:first-child {
    padding-left: var(--nx-spacing-4x);
  }

  &:last-child {
    padding-right: var(--nx-spacing-4x);
  }

  > .nx-btn-bar {
    // buttons should be 8px from row edges even though row padding is 12px
    margin-top: calc(0px - var(--nx-spacing-base));
    margin-bottom: calc(0px - var(--nx-spacing-base));
  }

  &:not(.nx-cell--header) > .nx-btn-bar {
    .nx-btn--icon-only {
      @include nx-small-icon-btn;
    }
  }
}

.nx-cell--label {
  @include nx-text-helpers.semi-bold;
}

.nx-cell--header {
  @include nx-text-helpers.bold;
  background-color: var(--nx-swatch-indigo-80);
  border-top: none;
  box-sizing: border-box;

  color: var(--nx-color-text-dark);
  font-size: var(--nx-font-size-s);
  height: $nx-table-cell-header-height;
  text-align: left;
  text-transform: uppercase;
  white-space: nowrap;
  vertical-align: middle;

  &:focus {
    outline: 1px solid var(--nx-color-interactive-border-focus);
    outline-offset: -1px;
    box-shadow: var(--nx-box-shadow-focus);
  }
}

// columns whose content is numerical
.nx-cell--num {
  text-align: center;
}


.nx-cell--icon {
  color: var(--nx-color-text-dark);
  text-align: center;
}

.nx-cell--chevron {
  @extend .nx-cell--icon;

  box-sizing: content-box;

  // this is the width of the chevron svg
  width: 10px;
  height: auto;
}

.nx-cell--sortable {
  user-select: none;
  -ms-user-select: none;
}

.nx-table-row--filter-header > .nx-cell--header {
  background-color: var(--nx-color-component-background);
  border-bottom: var(--nx-border-default);
  padding-top: var(--nx-spacing-4x);
  padding-bottom: var(--nx-spacing-4x);
}

.nx-cell__sort-icons {
  cursor: pointer;
  font-size: 16px;
  margin-left: var(--nx-spacing-base);

  > :first-child path {
    color: var(--nx-swatch-white);
  }

  > :nth-child(2) path {
    color: var(--nx-swatch-blue-40);
  }
}

.nx-cell__sort-btn, .nx-cell__chevron-btn {
  @include nx-container-helpers.container-horizontal;

  width: calc(100% + 2 * var(--nx-spacing-4x));
  text-align: left;
  text-transform: uppercase;

  &, &:hover, &:active, &:focus {
    border: none;
    background: none;
    font: inherit;
    outline: none;
  }

  // first and last child selectors necessary for specificity
  &, &:first-child, &:last-child {
    // make button take up entire header including its padding box
    margin: calc(0px - var(--nx-spacing-3x)) calc(0px - var(--nx-spacing-4x));
    padding: var(--nx-spacing-3x) var(--nx-spacing-4x);
  }
}
